- key remapping
- decide if TIOCPKT is necessary and either handle it or remove the code
- it would be nice if there wasn't so much copying buffers about, audit uses
- window names
- status bar
- useful env vars like WINDOW
- lots of scripting love: add, remove, move around windows, status bar
- sort out who controls the buffers in local.c a bit
- better checking/emulation for missing term requirements
- alt charset, borders etc (terminfo(5)/Line Graphics)
- new window command prompt
- mouse handling and some other bits elinks needs
- scrollback
- server doesn't handle SIGTERM anymore...
- toolbar, copy/paste
- cleanup/redesign IPC
- the whole input/screen/local thing sucks a bit, reorganise/redesign it
- line mode/char-at-a-time mode a la telnet?
- some of the uses of buffers really sucks. buffer_reverse_add/remove,
  and buffer_insert_range/delete_range are abominations. this should be
  rethought
- figure out once and for all what is going on with backspace and del
- deal properly with ambiguous ops... list-sessions & list-windows
- keys to add:
	i : show window info (show name, title, size, tty, ...)
	meta-meta : pass through meta (will need this...)
- commands to add:
	rename window/sessions
	swap windows
	link/copy windows
	detach session
	unlink window (... what about windows not linked to any session???)
	close window
	kill session
- update NOTES!!!!
- in order to do status line, everything needs to be range checked. we can't
  just fire stuff back to the client, since it can have a different idea of
  window size. so, merge input and screen command parsers to do the following:
	- parse escape sequence
	- range check and limit it
	- update screen
	- encode and pass to client
  split input.c into input-client.c for keys and input-server.c and for data
- nuke '?' on getopts
